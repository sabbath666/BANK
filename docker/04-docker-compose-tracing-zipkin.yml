version: '3'

services:

  ##############################   infrastructure   #############################

  consul:
    image: sabbath666/consul-server
    container_name: consul
    volumes:
      - ./consul/data:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8500:8500"
    restart: always

  gateway:
    image: sabbath666/gateway-service
    container_name: gateway-service
    ports:
      - 8888:8888
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: always

  postgres:
    image: postgres:11
    container_name: postgres
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: always

  ################################   services   #################################

  ui-service:
    image: sabbath666/ui-service
    container_name: ui-service
    environment:
      SERVER_PORT: 9999
      SPRING_CLOUD_CONSUL_HOST: consul
      GATEWAY_URI: http://gateway-service:8888/api/v1
    ports:
      - 9999:9999
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: always

  client-service:
    image: sabbath666/client-service
    container_name: client-service
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_PROFILES_ACTIVE: test
      GATEWAY_URI: http://gateway:8888/api/v1
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: always

  bank-service:
    image: sabbath666/bank-service
    container_name: bank-service
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_PROFILES_ACTIVE: test
      GATEWAY_URI: http://gateway:8888/api/v1
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: always

  credit-service:
    image: sabbath666/credit-service
    container_name: credit-service
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_PROFILES_ACTIVE: test
      GATEWAY_URI: http://gateway:8888/api/v1
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: always

  check-service:
    image: sabbath666/check-service
    container_name: check-service
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_PROFILES_ACTIVE: test
      GATEWAY_URI: http://gateway:8888/api/v1
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: always

  ################################   monitoring   ###############################

  prometheus:
    image: prom/prometheus:v2.4.3
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml
      - ./prometheus/prometheus_data:/prometheus
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      #      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: always
    ports:
      - "9090:9090"

  prometheusdb:
    image: timescale/pg_prometheus:0.2.1
    ports:
      - "5434:5432"
    container_name: prometheusdb
    volumes:
      - ./prometheus/prometheusdb:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command:
      - 'postgres'
      - '-csynchronous_commit=off'

  prometheus_db_adapter:
    image: timescale/prometheus-postgresql-adapter:master
    ports:
      - "9201:9201"
    container_name: prometheus_db_adapter
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: always
    command:
      - '-pg.host=prometheusdb'
      - '-pg.port=5432'
      - '-pg.prometheus-log-samples'
      - '-pg.password=postgres'
      - '-pg.user=postgres'

  grafana:
    image: grafana/grafana:5.3.2
    container_name: grafana
    depends_on:
      - prometheus
    volumes:
      - ./grafana/grafana_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/datasources
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/setup.sh:/setup.sh
      - /etc/localtime:/etc/localtime:ro
    #    entrypoint: /setup.sh
    restart: always
    expose:
      - 3000
    ports:
      - 3000:3000

  smashing:
    network_mode: host
    image: visibilityspots/smashing
    container_name: smashing
    volumes:
      - /etc/localtime:/etc/localtime:ro
    #      - ./smashing:/dashboards
    restart: always
    ports:
      - 3030:3030


  ##################################   logging   ################################
  graylog:
    image: graylog/graylog:2.5.1-3
    container_name: graylog
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      GRAYLOG_WEB_ENDPOINT_URI: "http://127.0.0.1:9000/api"
    ports:
      - "9000:9000"
      - "12201:12201/tcp"
      - "514:514/udp"
      - "5555:5555"

  mongo:
    image: mongo:3
    container_name: mongo
    volumes:
      - /etc/localtime:/etc/localtime:ro

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
    container_name: elasticsearch
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xms2g -Xmx4g"
      discovery.type: "single-node"
      xpack.security.enabled: "false"
      http.host: "0.0.0.0"
      bootstrap.memory_lock: "true"
      ulimit memlock: "-1:-1 "

  ##################################   tracing   ################################
  zipkin:
    image: openzipkin/zipkin:2.12
    container_name: zipkin
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      STORAGE_TYPE: mem
    ports:
      - "9411:9411"

  ##################################   alerting   ###############################

  alertmanager:
    image: prom/alertmanager:v0.15.3
    volumes:
      - ./prometheus/alertmanager.yml:/prometheus/alertmanager.yml
      - ./prometheus/alertmanager_data:/data
    command:
      - '--config.file=/prometheus/alertmanager.yml'
      - '--storage.path=/data'
    ports:
      - 9093:9093







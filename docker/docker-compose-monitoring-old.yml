version: '3'
networks:
  monitor-net:
    driver: bridge

services:
  configservice:
    image: config-service
    container_name: config-service
    environment:
      SERVER_PORT: 8888
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 8888:8888
    networks:
      - monitor-net

#  usersservice1:
#    image: users-service
#    #    container_name: users-service1
#    environment:
#      SERVER_PORT: 8888
#      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#    #    ports:
#    #      - 9990:8888
#    networks:
#      - monitor-net

  prometheus:
    image: prom/prometheus:v2.4.3
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml
      - ./prometheus/prometheus_data:/prometheus
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      #      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'

    #    restart: unless-stopped
    restart: always
    ports:
      - "9090:9090"
#    networks:
#      - monitor-net

  alertmanager:
    image: prom/alertmanager:v0.15.3
    volumes:
      - ./prometheus/alertmanager.yml:/prometheus/alertmanager.yml
      - ./prometheus/alertmanager_data:/data
    command:
      - '--config.file=/prometheus/alertmanager.yml'
      - '--storage.path=/data'
    ports:
      - 9093:9093
#    networks:
#      - monitor-net

  prometheusdb:
    image: timescale/pg_prometheus:0.2.1
    ports:
      - "5434:5432"
    container_name: prometheusdb
    volumes:
      - ./prometheus/prometheusdb:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - monitor-net
    command:
#      - 'postgres'
      - '-csynchronous_commit=off'

  #  prometheusdb:
  #    image: timescale/timescaledb
  #    ports:
  #      - "5434:5432"
  #    container_name: prometheusdb
  #    networks:
  #      - monitor-net
  #    command:
  #      - 'postgres'
  #      - '-csynchronous_commit=off'
  #    environment:
  #      POSTGRES_USER: sabbath
  #      POSTGRES_PASSWORD: sabbath

  prometheus_db_adapter:
    image: timescale/prometheus-postgresql-adapter:master
    ports:
      - "9201:9201"
    container_name: prometheus_db_adapter
    volumes:
      - /etc/localtime:/etc/localtime:ro
#    networks:
#      - monitor-net
    command:
      - '-pg.host=prometheusdb'
      - '-pg.port=5432'
      - '-pg.prometheus-log-samples'

  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    ports:
      - "9100:9100"
#    networks:
#      - monitor-net

  grafana:
    image: grafana/grafana:5.3.2
    container_name: grafana
    depends_on:
      - prometheus
    volumes:
      - ./grafana/grafana_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/datasources
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/setup.sh:/setup.sh
      - /etc/localtime:/etc/localtime:ro
    #    entrypoint: /setup.sh
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - 3000:3000
#    networks:
#      - monitor-net

